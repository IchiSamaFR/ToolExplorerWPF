<Page x:Class="ToolExplorerWPF.Views.Pages.PathFinderPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ToolExplorerWPF.Views.Pages"
      Title="PathFinderView"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:controls="clr-namespace:ToolExplorerWPF.Views.Controls"
      xmlns:astarlibrary="clr-namespace:AstarLibrary;assembly=AstarLibrary"
      d:DataContext="{d:DesignInstance local:PathFinderPage,
                                       IsDesignTimeCreatable=False}"
      d:DesignHeight="450"
      d:DesignWidth="800"
      ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
      ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      ScrollViewer.CanContentScroll="False"
      Name="Page"
      mc:Ignorable="d">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <ui:Card VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Name="content">
            <controls:GridEx ItemsSource="{Binding ViewModel.Items}" ColumnCount="{Binding ViewModel.Columns}" RowCount="{Binding ViewModel.Rows}">
                <controls:GridEx.ItemTemplate>
                    <DataTemplate>
                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="2" Command="{Binding Path=ViewModel.ApplyWallCommand, ElementName=Page}" CommandParameter="{Binding}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsWall}" Value="True">
                                            <Setter Property="Background" Value="Black" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                            <Setter Property="Background" Value="Gray" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PathFound}" Value="True">
                                            <Setter Property="Background" Value="Gold" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEndNode}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsStartNode}" Value="True">
                                            <Setter Property="Background" Value="Green" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DataTemplate>
                </controls:GridEx.ItemTemplate>
            </controls:GridEx>
        </ui:Card>
        <ui:Card Grid.Column="1" Margin="10 0 0 0" VerticalAlignment="Top">
            <StackPanel Orientation="Vertical" CanVerticallyScroll="True" VerticalAlignment="Top">
                <ui:TextBlock Text="Parameters" FontTypography="BodyStrong" Margin="0 0 0 10"/>
                <ui:TextBlock Text="Height"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Slider HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsSnapToTickEnabled="True"
                        Minimum="5"
                        Maximum="25"
                        TickFrequency="1"
                        Value="{Binding ViewModel.Rows, Mode=TwoWay}"  Margin="0 0 10 0"/>
                    <TextBox Grid.Column="1" Text="{Binding ViewModel.Rows, Mode=TwoWay}"/>
                </Grid>
                <ui:TextBlock Text="Width"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Slider HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsSnapToTickEnabled="True"
                        Minimum="5"
                        Maximum="25"
                        TickFrequency="1"
                        Value="{Binding ViewModel.Columns, Mode=TwoWay}"  Margin="0 0 10 0"/>
                    <TextBox Grid.Column="1" Text="{Binding ViewModel.Columns, Mode=TwoWay}"/>
                </Grid>
                <ui:TextBlock Text="Speed delay"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Slider HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        IsSnapToTickEnabled="True"
                        Minimum="0"
                        Maximum="200"
                        TickFrequency="1"
                        Value="{Binding ViewModel.SpeedDelay, Mode=TwoWay}"  Margin="0 0 10 0"/>
                    <TextBox Grid.Column="1" Text="{Binding ViewModel.SpeedDelay, Mode=TwoWay}"/>
                </Grid>
                <CheckBox IsChecked="{Binding ViewModel.IsDiagonal}" Content="Diagonal"/>

                <ui:Button
                    Grid.Column="0" Margin="0 10 0 0"
                    Content="Find path"
                    Icon="Fluent24" 
                    Command="{Binding ViewModel.GenerateCommand}"/>
            </StackPanel>
        </ui:Card>
    </Grid>
</Page>
